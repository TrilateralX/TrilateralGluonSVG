// Generated by Haxe 4.2.0-rc.1+354c24d30
#ifndef INCLUDED_trilateral3_math__Algebra_Algebra_Statics_
#define INCLUDED_trilateral3_math__Algebra_Algebra_Statics_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(trilateral3,math,_Algebra,Algebra_Statics_)

namespace trilateral3{
namespace math{
namespace _Algebra{


class HXCPP_CLASS_ATTRIBUTES Algebra_Statics__obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef Algebra_Statics__obj OBJ_;
		Algebra_Statics__obj();

	public:
		enum { _hx_ClassId = 0x105d6895 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="trilateral3.math._Algebra.Algebra_Statics_")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"trilateral3.math._Algebra.Algebra_Statics_"); }

		inline static ::hx::ObjectPtr< Algebra_Statics__obj > __new() {
			::hx::ObjectPtr< Algebra_Statics__obj > __this = new Algebra_Statics__obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< Algebra_Statics__obj > __alloc(::hx::Ctx *_hx_ctx) {
			Algebra_Statics__obj *__this = (Algebra_Statics__obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Algebra_Statics__obj), false, "trilateral3.math._Algebra.Algebra_Statics_"));
			*(void **)__this = Algebra_Statics__obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Algebra_Statics__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Algebra_Statics_",f1,06,12,34); }

		static void __boot();
		static Float quadStep;
};

} // end namespace trilateral3
} // end namespace math
} // end namespace _Algebra

#endif /* INCLUDED_trilateral3_math__Algebra_Algebra_Statics_ */ 
